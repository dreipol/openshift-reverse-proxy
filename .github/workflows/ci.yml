name: CI

on:
  push:
  release:
    types:
      - created

env:
  GCR_IMAGE: gcr.io/dreipol-d2329/${{github.repository}}
  ASPECTRA_REGISTRY: registry.acp.aspectra.com
  ASPECTRA_TAG: latest
  PROJECT_NAME: openshift-reverse-proxy
  OPENSHIFT_HOST: https://acp-console.aspectra.com
  OPENSHIFT_PROJECT: dre-hosting-prod
  ASPECTRA_PROJECT_NAME_PROD: reverse-proxy
  ASPECTRA_IMAGE_PROD: registry.acp.aspectra.com/dre-hosting-prod/reverse-proxy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: dreipol/github-actions/slugify@master

    - uses: dreipol/github-actions/set-logs-url@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JOB_NAME: build

    - name: Docker Build
      uses: dreipol/github-actions/build@master
      env:
        GCP_SERVICEACCOUNT_KEY: ${{ secrets.GCP_SERVICEACCOUNT_KEY }}

    - name: Test Connection
      run: | 
        docker network create --driver bridge testnet
        docker run -d --rm -p 8080:8080 --network testnet --name webserver busybox sh -c "while true; do { echo -e 'HTTP/1.1 200 OK\r\n'; echo 'Hello World'; } | nc -l -p  8080; done"
        docker run --rm --network testnet -e SERVICE="webserver:8080" -e STATICFILES_LOCATION=static -e SECUREFILES_LOCATION=secure -e MEDIAFILES_LOCATION=media -e MINIO_HOST=127.0.0.1 -e MINIO_PORT=1337 -e BUCKET_NAME=test $GCR_IMAGE:$GITHUB_SHA /bin/sh -e test.sh
        docker run -d --rm -p 5000:5000 --network testnet --name nginx -e SERVICE="webserver:8080" -e STATICFILES_LOCATION=static -e SECUREFILES_LOCATION=secure -e MEDIAFILES_LOCATION=media -e MINIO_HOST=127.0.0.1 -e MINIO_PORT=1337 -e BUCKET_NAME=test $GCR_IMAGE:$GITHUB_SHA
        sleep 5
        curl --fail --silent --show-error localhost:5000
        docker kill nginx && docker kill webserver

    - name: Push Image
      uses: dreipol/github-actions/push@master
      env:
        GCP_SERVICEACCOUNT_KEY: ${{ secrets.GCP_SERVICEACCOUNT_KEY }}

    - name: Notify build failure
      if: failure() && github.event_name == 'release'
      uses: dreipol/github-actions/slack@master
      env:
        ENVIRONMENT: ${{env.GITHUB_REF_SLUG}}
        SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
        TEXT: ':boom: Build for ${GITHUB_REPOSITORY} ${GITHUB_REF_SLUG} failed. <https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|
          Check the interactive logs on github>. <$DREIPOL_LOGS_URL | Or check the
          raw logs>'


  notify-slack:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: dreipol/github-actions/slugify@master
      - name: Notify build started
        uses: dreipol/github-actions/slack@master
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          TEXT: ':hourglass_flowing_sand: Deployment for ${GITHUB_REPOSITORY} ${GITHUB_REF_SLUG}
          started. <https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|
          Check the progress on github>'

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: dreipol/github-actions/slugify@master
      - uses: dreipol/github-actions/deploy@master
        env:
          GCP_SERVICEACCOUNT_KEY: ${{ secrets.GCP_SERVICEACCOUNT_KEY }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
          OPENSHIFT_USER: ${{ secrets.OPENSHIFT_USER }}
          DEPLOY_IMAGE: ${{ env.ASPECTRA_IMAGE_PROD }}

      - uses: dreipol/github-actions/deployment-status-reverse-proxy@master
        env:
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Notify deployment success
        if: success()
        uses: dreipol/github-actions/slack@master
        env:
          ENVIRONMENT: ${{env.GITHUB_REF_SLUG}}
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          TEXT: ':rocket: Deployment for ${GITHUB_REPOSITORY} ${GITHUB_REF_SLUG} successful!'

      - name: Notify deployment failure
        if: failure()
        uses: dreipol/github-actions/slack@master
        env:
          ENVIRONMENT: ${{env.GITHUB_REF_SLUG}}
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          TEXT: ':boom: Deployment for ${GITHUB_REPOSITORY} ${GITHUB_REF_SLUG} failed.
          <${OPENSHIFT_HOST}/console/project/${OPENSHIFT_PROJECT}/browse/dc/${ASPECTRA_PROJECT_NAME_PROD}
          | Check the logs on Openshift>'

